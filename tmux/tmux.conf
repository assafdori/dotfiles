#--------------------------------------------------------------------------
# Source any "reset" or fallback config first
#--------------------------------------------------------------------------
source-file ~/.config/tmux/tmux.reset.conf

#--------------------------------------------------------------------------
# Basic Settings
#--------------------------------------------------------------------------
# Use a large scrollback buffer
set -g history-limit 1000000

# Use Vi mode in copy/selection
setw -g mode-keys vi

# Address Vim mode switching delay
set -s escape-time 0

# Use a blinking-bar cursor style (where supported)
set -g @cursor_style bar

# Proper terminal usage and color improvements
set -g default-terminal "$TERM"
set -as terminal-features ",*:RGB"
set -ag terminal-overrides ",xterm-256color:RGB"

# Enable undercurl and undercurl colors (where supported)
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Enable setting the system clipboard
set-option -g set-clipboard on

# Start window/pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allow tmux to rename windows automatically
set -g allow-rename on

# Renumber windows when one is removed
set -g renumber-windows on

# Allow the mouse to resize panes and select windows
set -g mouse on

# Set tmux titles
set -g set-titles on

# Monitor window activity
setw -g monitor-activity on
set -g bell-action any

# Disable visual notifications
set -g visual-bell off
set -g visual-activity off

# Enable focus events (for terminals that support them)
set -g focus-events on

# Resize panes more aggressively for different terminal sizes
setw -g aggressive-resize on

# Don't detach tmux session when it‚Äôs killed
set -g detach-on-destroy off

# Update environment for FZF options if desired
set -ga update-environment FZF_DEFAULT_OPTS

#--------------------------------------------------------------------------
# Status Line and Theming
#--------------------------------------------------------------------------
# Define color variables
thm_bg="default"
thm_bg_dark="default"
thm_fg="#c0caf5"
thm_gray="#9499b8"
thm_magenta="#bb9af7"
thm_pink="#ff007c"
thm_green="#9ece6a"
thm_blue="#2ac3de"
thm_black="#414868"
thm_yellow="#e0af68"
thm_selected="#364a82"
thm_match="#3d59a1"

# Enable status line and position it
set -g status "on"
set -g status-position bottom
set -g status-justify left
set -g status-style 'fg=white'

# Window/pane border styles
set -g pane-border-style "fg=#2c2f3d,bg=default"
set -g pane-active-border-style "fg=${thm_match}"
set -gw pane-border-indicators 'colour'
set -g window-status-activity-style "none"
set-hook -g -w pane-focus-in "set-option -Fw pane-border-status '#{?#{e|>:#{window_panes},1},top,off}'"


# Status left: session name
set -g status-left "#[fg=#{?client_prefix,${thm_yellow},${thm_fg}},bg=${thm_bg_dark}]#S#[fg=${thm_fg},bg=default] ‚ñ∏ "

# Status left length
set -g status-left-length 30

# Status right: Disabled for now
set -g status-right ""

# Update status interval
set -g status-interval 1

# Window status formats
setw -g window-status-format "#[fg=${thm_gray}]#I #{?#{e|>:#{window_panes},1},ÓØà #{pane_current_command},#W}"
setw -g window-status-current-format "#[fg=${thm_green},bold]#I #{?#{e|>:#{window_panes},1},ÓØà #{pane_current_command},#W}"
setw -g window-status-separator "#[fg=#565f89] ‚èê "

# Pane style when active/inactive
set-window-option -g window-active-style "fg=${thm_fg}"
set-window-option -g window-style "fg=${thm_gray}"

# Message area styles
set -g message-style fg="${thm_yellow}",bg="${thm_bg_dark}",align="centre"
set -g message-command-style fg="${thm_blue}",bg="${thm_gray}",align="centre"

# Optional: Set session/window titles in terminal
set-option -g set-titles-string "#S / #W"

set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
setenv -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
setenv -g GNUPGHOME $HOME/.gnupg


#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------
# Set prefix to Ctrl-A
set -g prefix C-a

# Send prefix to nested sessions by pressing Ctrl-A twice
bind C-a send-prefix

# Reload config
unbind r
bind r source-file ~/.config/tmux/tmux.conf\; display-message '~/.tmux.conf reloaded'

# Navigate windows with Ctrl + p/n
bind C-p previous-window
bind C-n next-window

# Vim-like pane navigation
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# "Smart" pane navigation if inside Vim
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch most recently used windows
bind Space last-window

# Switch between two most recently used sessions
bind b switch-client -l

# Move current window up/down in the window list
bind -r N run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) + 1)"
bind -r P run-shell "tmux swap-window -t $(expr $(tmux list-windows | grep \"(active)\" | cut -d \":\" -f 1) - 1)"

# Split panes
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# Create new window in same path
bind C new-window -c "#{pane_current_path}"

# Resize panes with SHIFT or CTRL
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r C-H resize-pane -L 5
bind -r C-L resize-pane -R 5
bind -r C-J resize-pane -D 5
bind -r C-K resize-pane -U 5

# Kill pane quickly
bind c kill-pane

# Open lazygit in new window
bind g new-window -n 'ÓúÇ lazygit' -c "#{pane_current_path}" "lazygit"

# Open GitHub Dashboard in new (or existing) session
bind G run-shell "tmux switch-client -t gh-dash || tmux new-session -d -s gh-dash -c '$HOME' gh dash && tmux switch-client -t gh-dash"

# Copy tmux buffer to system clipboard
#bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
# bind y run -b "tmux show-buffer | xclip -selection clipboard"
bind y run -b "tmux show-buffer | pbcopy" \; display-message "copied tmux buffer to system clipboard"

# Break and rejoin panes
bind-key B break-pane -d
bind-key E command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# Toggle tmux status bar top/bottom
bind-key C-k run-shell "tmux set-option -g status-position top;"
bind-key C-j run-shell "tmux set-option -g status-position bottom;"

# Opencode popup menu
bind o popup -E -d "#{pane_current_path}" -w 90% -h 90% "opencode"
bind O new-window -n "opencode" -c "#{pane_current_path}" "opencode"

#--------------------------------------------------------------------------
# Sesh Integration
#--------------------------------------------------------------------------
bind-key "T" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""

#--------------------------------------------------------------------------
# List Panes Integration
# --------------------------------------------------------------------------
bind-key f run-shell -b "$HOME/.config/tmux/scripts/list-panes.sh"

#--------------------------------------------------------------------------
# Plugins
#--------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name'
set -g @plugin 'tmux-plugins/tmux-yank'

# Turn off auto-continuum restore (set to 'on' if you want sessions restored)
set -g @continuum-restore 'off'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

# Initialize Tmux Plugin Manager
run '~/.tmux/plugins/tpm/tpm'
